{"version":3,"sources":["store/constants/actionTypes.js","components/ComponentLoading/style.js","components/Loader/style.js","components/Loader/index.js","components/ComponentLoading/index.js","context/UserContext.js","store/actions/commonActions.js","configs/errorText.js","pages/Login/index.js","configs/styles/globalStyles.js","pages/PatientRegistration/index.js","pages/PageNotFound/index.js","pages/LandingPage/index.js","routes/index.js","components/Toast/style.js","components/Toast/index.js","configs/styles/colorThemes.js","store/reducers/patientRegistrationReducer.js","store/reducers/commonReducer.js","store/reducers/landingPageReducer.js","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["REGISTER_PATIENT","LOGIN","LOGOUT","SET_TOAST","NEWSFEED","Mask","styled","div","props","theme","pureWhite","PlaceholderWrap","Message","MainLoaderWrapper","LoaderVideo","video","MainLoader","autoPlay","loop","muted","playsInline","spin","icon","faSpinner","ComponentLoading","error","timedOut","pastDelay","status","message","FailedLoading","defaultProps","KEY","UserStateContext","React","createContext","UserDispatchContext","userReducer","state","action","type","isAuthenticated","Error","UserProvider","children","useReducer","localStorage","getItem","dispatch","Provider","value","useUserState","context","useContext","undefined","useUserDispatch","signOut","history","removeItem","updateToast","toastObj","validationText","fullnameShort","requireFullname","requireEmail","invalidEmail","requirePassword","invalidPassword","requireConfirmation","requireGender","requireDateofBirth","requireZipcode","requireCountry","invalidPhoneNumber","LoginComponent","Loadable","loader","loading","timeout","Login","displayName","createGlobalStyle","Gray20","RegistrationComponent","PatientRegistration","PageNotFoundComponent","PageNotFound","LandingComponent","Landing","AppRouter","path","component","exact","Layout","show","toastWarning","toastError","toastInfo","toastSuccess","connect","commonReducer","useEffect","setTimeout","handleClose","variant","onClick","className","colorThemes","veryLightGrey","lightGrey","errorRed","ligntPink","errorBrown","valid","luminousRed","transparentWithOpacity","whiteSmoke","whisper","veryDarkGrey","gainsboro","flatBlue","darkBlue","pomagranate","snow","whisperTint","speechBlue","initialState","registerPatient","newsFeedData","landingPageReducer","appReducer","combineReducers","patientRegister","registrationDetails","rootReducer","createHistory","middleware","thunk","routerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","applyMiddleware","App","store","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9a2c3540.chunk.js","sourcesContent":["export const REGISTER_PATIENT = 'REGISTER_PATIENT';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_TOAST = 'SET_TOAST';\r\nexport const NEWSFEED = 'NEWSFEED';\r\n","import styled from 'styled-components';\r\n\r\nexport const Mask = styled.div`\r\n  min-height: calc(100vh - 73px);\r\n  background: ${(props)=>props.theme.pureWhite};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  * {\r\n    max-width: 544px;\r\n  }\r\n`;\r\n\r\nexport const PlaceholderWrap = styled.div`\r\n  margin: 2rem;\r\n`;\r\nexport const Message = styled.div`\r\n  padding: 2rem;\r\n  width: 100%;\r\n  font-size: 1.8rem;\r\n  line-height: 3rem;\r\n  text-align: center;\r\n  color: '#f00'\r\n  box-sizing: border-box;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nconst MainLoaderWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${(props)=>props.theme.pureWhite};\r\n`;\r\n\r\nMainLoaderWrapper.LoaderVideo = styled.video`\r\n  width: auto;\r\n  height: 300px;\r\n`;\r\n\r\nexport default MainLoaderWrapper;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport MainLoaderWrapper from './style';\r\n\r\nconst MainLoader = () => (\r\n  <MainLoaderWrapper>\r\n    <MainLoaderWrapper.LoaderVideo autoPlay loop muted playsInline>\r\n      <FontAwesomeIcon spin icon={faSpinner} />\r\n    </MainLoaderWrapper.LoaderVideo>\r\n  </MainLoaderWrapper>\r\n);\r\n\r\nexport default MainLoader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Mask, PlaceholderWrap, Message } from './style';\r\nimport { FailedLoading } from '../../configs/errorText';\r\nimport MainLoader from '../Loader';\r\n\r\nexport const ComponentLoading = ({ error, timedOut, pastDelay }) => {\r\n  if (error) {\r\n    return (\r\n      <Mask>\r\n        <PlaceholderWrap>\r\n          <Message status=\"error\" message={FailedLoading}>\r\n          </Message>\r\n        </PlaceholderWrap>\r\n      </Mask>\r\n    );\r\n  } else if (timedOut || pastDelay) {\r\n    return (\r\n      <Mask>\r\n        <MainLoader />\r\n      </Mask>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nComponentLoading.defaultProps = {\r\n  error: false,\r\n  timedOut: false,\r\n  pastDelay: true,\r\n};\r\n\r\nComponentLoading.propTypes = {\r\n  error: PropTypes.any,\r\n  timedOut: PropTypes.bool,\r\n  pastDelay: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\n\r\nconst KEY = 'tempAuthToken';\r\nconst UserStateContext = React.createContext();\r\nconst UserDispatchContext = React.createContext();\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return { ...state, isAuthenticated: true, error: false };\r\n    case 'SIGN_OUT_SUCCESS':\r\n      return { ...state, isAuthenticated: false };\r\n    case 'LOGIN_FAILURE':\r\n      return { ...state, error: true };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  const [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(KEY),\r\n    error: false,\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>{children}</UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  const context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUserState must be used within a UserProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  const context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUserDispatch must be used within a UserProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(KEY);\r\n  dispatch({ type: 'SIGN_OUT_SUCCESS' });\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, signOut };\r\n","import { SET_TOAST } from '../constants/actionTypes';\r\n\r\nexport const updateToast = (toastObj) => ({\r\n  type: SET_TOAST,\r\n  toastObj,\r\n});\r\n","export const validationText = {\r\n  fullnameShort: 'Your name is too short',\r\n  requireFullname: 'Please enter your full name',\r\n  requireEmail: 'Please enter your email',\r\n  invalidEmail: 'The email is incorrect',\r\n  requirePassword: 'Please Enter your password',\r\n  invalidPassword:\r\n    'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character',\r\n  requireConfirmation: 'Password confirmation is required',\r\n  requireGender: 'Please enter your gender',\r\n  requireDateofBirth: 'Please enter your date of birth',\r\n  requireZipcode: 'Please enter your zipcode',\r\n  requireCountry: 'Please enter your country',\r\n  invalidPhoneNumber: 'Please enter a valid phone number',\r\n};\r\n\r\nexport const FailedLoading = 'Failed to load page! Try refreshing.';\r\n","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { ComponentLoading } from '../../components/ComponentLoading';\r\n\r\nconst LoginComponent = Loadable({\r\n  loader: () => import('./container'),\r\n  loading: ComponentLoading,\r\n  timeout: 5000,\r\n});\r\n\r\nexport const Login = props => <LoginComponent {...props} />;\r\n\r\nLogin.displayName = 'Login';","import { createGlobalStyle } from 'styled-components';\r\n/* eslint-disable */\r\nexport default createGlobalStyle`\r\n  html, body {\r\n    width: 100%;\r\n    padding: 0;\r\n    font-family: 'Gilroy-Light';\r\n    color: ${(props)=>props.theme.Gray20};\r\n    margin: 0;\r\n  }\r\n  *{\r\n    box-sizing: border-box;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n  `;","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { ComponentLoading } from '../../components/ComponentLoading';\r\n\r\nconst RegistrationComponent = Loadable({\r\n  loader: () => import('./container'),\r\n  loading: ComponentLoading,\r\n  timeout: 5000,\r\n});\r\n\r\nexport const PatientRegistration = props => <RegistrationComponent {...props} />;\r\n\r\nPatientRegistration.displayName = 'Registration';","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { ComponentLoading } from '../../components/ComponentLoading';\r\n\r\nconst PageNotFoundComponent = Loadable({\r\n  loader: () => import('./component'),\r\n  loading: ComponentLoading,\r\n  timeout: 5000,\r\n});\r\n\r\nexport const PageNotFound = props => <PageNotFoundComponent {...props} />;\r\n\r\nPageNotFound.displayName = 'PageNotFound';","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { ComponentLoading } from '../../components/ComponentLoading';\r\n\r\nconst LandingComponent = Loadable({\r\n  loader: () => import('./container'),\r\n  loading: ComponentLoading,\r\n  timeout: 5000,\r\n});\r\n\r\nexport const Landing = props => <LandingComponent {...props} />;\r\n\r\nLanding.displayName = 'Landing';","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n// pages\r\nimport { PatientRegistration } from '../pages/PatientRegistration';\r\nimport { Login } from '../pages/Login';\r\nimport { PageNotFound } from '../pages/PageNotFound';\r\nimport { Landing } from '../pages/LandingPage';\r\nimport { useUserState } from '../context/UserContext';\r\n\r\nconst AppRouter = () => {\r\n  // global\r\n  const { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/page-not-found\" component={PageNotFound} />\r\n        <Route path=\"/register\" exact component={PatientRegistration} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/\" component={Landing} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  margin: auto;\r\n  height: 30px;\r\n  width: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .toast-bar {\r\n    top: 10px;\r\n    padding: 10px;\r\n    border: ${(props) => props.show ? `1px solid`:`0`};\r\n    border-radius: 5px;\r\n  }\r\n  .warning {\r\n    background-color: ${(props) => props.theme.toastWarning};\r\n  }\r\n  .error {\r\n    background-color: ${(props) => props.theme.toastError};\r\n  }\r\n  .info {\r\n    background-color: ${(props) => props.theme.toastInfo};\r\n  }\r\n  .success {\r\n    background-color: ${(props) => props.theme.toastSuccess};\r\n  }\r\n  .content-msg-wrapper {\r\n    width: calc(100% - 15px);\r\n  }\r\n  .closeBtn {\r\n    position: absolute;\r\n    top: 14px;\r\n    right: 15px;\r\n  }\r\n  #client-snackbar {\r\n    display: flex;\r\n    align-items: initial;\r\n  }\r\n  .message {\r\n    padding-left: 5px;\r\n  }\r\n  .icon {\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout } from './style';\r\nimport { updateToast } from '../../store/actions/commonActions';\r\n\r\nconst Toast = (props) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      handleClose();\r\n    }, 3);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    props.updateToast({\r\n      value: false,\r\n      message: '',\r\n      variant: '',\r\n    });\r\n  };\r\n  return (\r\n    <Layout show={props.toastObj.value}>\r\n      <span onClick={handleClose} className={`toast-bar ${props.toastObj.variant}`}>\r\n        {props.toastObj.value && `${props.toastObj.message}`}\r\n      </span>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nToast.propTypes = {\r\n  updateToast: PropTypes.func.isRequired,\r\n  toastObj: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateToast: (toastObj) => dispatch(updateToast(toastObj)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    toastObj: state.commonReducer.toastObj,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toast);\r\n","const colorThemes = {\r\n  veryLightGrey: '#ccc',\r\n  pureWhite: '#fff',\r\n  lightGrey: '#999',\r\n  errorRed: 'rgb(191, 49, 12)',\r\n  ligntPink: 'rgb(255, 245, 245)',\r\n  errorBrown: 'rgb(120, 27, 0)',\r\n  valid: 'rgb(0, 156, 38)',\r\n  luminousRed: '#ff2d21',\r\n  transparentWithOpacity: 'rgba(0, 0, 0, 0.2)',\r\n  toastWarning: '#ffa000',\r\n  toastError: '#d32f2f',\r\n  toastInfo: '#303f9f',\r\n  toastSuccess: '#43a047',\r\n  whiteSmoke: '#f5f5f5',\r\n  whisper: '#eee',\r\n  veryDarkGrey: '#666',\r\n  gainsboro: '#ddd',\r\n  Gray20: '#333',\r\n  flatBlue: '#2f839d',\r\n  darkBlue: 'rgb(13, 64, 79)',\r\n  pomagranate: '#ec442a',\r\n  snow: '#fbfbfb',\r\n  whisperTint: '#ebebeb',\r\n  speechBlue: '#3f51b5'\r\n};\r\n\r\nexport default colorThemes;\r\n","import { REGISTER_PATIENT } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  registerPatient: [],\r\n  loading: false,\r\n};\r\n\r\nexport default (state = { ...initialState }, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_PATIENT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        registerPatient: [...state.registerPatient, action.registrationDetails],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_TOAST } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  toastObj: {\r\n    value: false,\r\n    message: '',\r\n    variant: '',\r\n  },\r\n};\r\n\r\nconst commonReducer = (state = { ...initialState }, action) => {\r\n  switch (action.type) {\r\n    case SET_TOAST:\r\n      return {\r\n        ...state,\r\n        toastObj: action.toastObj,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default commonReducer;\r\n","import { NEWSFEED } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  newsFeedData: [],\r\n};\r\n// Handles neewsfeed related actions\r\nconst landingPageReducer = (state = { ...initialState }, action) => {\r\n  switch (action.type) {\r\n    case NEWSFEED:\r\n      return {\r\n        ...state,\r\n        newsFeedData: action.newsFeedData,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default landingPageReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport patientRegistartionReducer from './patientRegistrationReducer';\r\nimport commonReducer from './commonReducer';\r\nimport landingPageReducer from './landingPageReducer';\r\n\r\nimport { LOGOUT } from '../constants/actionTypes';\r\n\r\nconst appReducer = combineReducers({\r\n  patientRegister: patientRegistartionReducer,\r\n  commonReducer: commonReducer,\r\n  landingPageReducer: landingPageReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === LOGOUT) {\r\n    state = {};\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport rootReducer from './reducers';\r\n\r\nexport const history = createHistory();\r\n\r\nconst middleware = [thunk, routerMiddleware(history)];\r\n\r\nconst composeEnhancers =\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst appStore = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\r\n\r\nexport default appStore;\r\n","import React from 'react';\r\nimport AppRouter from './routes';\r\nimport Toast from '../src/components/Toast';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport colorThemes from './configs/styles/colorThemes';\r\nimport { Provider } from 'react-redux';\r\nimport appStore from './store';\r\nimport { UserProvider } from './context/UserContext';\r\n\r\n// Initialize store\r\n//const store = appStore();\r\n\r\nconst App = () => (\r\n  <Provider store={appStore}>\r\n    <UserProvider>\r\n      <ThemeProvider theme={colorThemes}>\r\n        <Toast />\r\n        <AppRouter />\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './configs/styles/globalStyles';\r\nimport './assets/font.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}